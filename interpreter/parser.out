Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    FUN
    LPAREN
    RPAREN

Grammar

Rule 0     S' -> program
Rule 1     program -> expression
Rule 2     expression -> NUMBER
Rule 3     expression -> expression PLUS expression
Rule 4     expression -> expression MINUS expression
Rule 5     expression -> expression TIMES expression
Rule 6     expression -> expression DIVIDE expression
Rule 7     expression -> ID
Rule 8     expression -> ID EQUALS expression
Rule 9     expression -> IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE

Terminals, with rules where they appear

COMMA                : 
DIVIDE               : 6
ELSE                 : 9
EQUALS               : 8
FUN                  : 
ID                   : 7 8
IF                   : 9
LBRACE               : 9 9
LPAREN               : 
MINUS                : 4
NUMBER               : 2
PLUS                 : 3
RBRACE               : 9 9
RPAREN               : 
TIMES                : 5
error                : 

Nonterminals, with rules where they appear

expression           : 1 3 3 4 4 5 5 6 6 8 9 9 9
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . expression
    (2) expression -> . NUMBER
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . ID
    (8) expression -> . ID EQUALS expression
    (9) expression -> . IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    NUMBER          shift and go to state 3
    ID              shift and go to state 4
    IF              shift and go to state 5

    program                        shift and go to state 1
    expression                     shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 1 (program -> expression .)
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    TIMES           shift and go to state 8
    DIVIDE          shift and go to state 9


state 3

    (2) expression -> NUMBER .

    PLUS            reduce using rule 2 (expression -> NUMBER .)
    MINUS           reduce using rule 2 (expression -> NUMBER .)
    TIMES           reduce using rule 2 (expression -> NUMBER .)
    DIVIDE          reduce using rule 2 (expression -> NUMBER .)
    $end            reduce using rule 2 (expression -> NUMBER .)
    LBRACE          reduce using rule 2 (expression -> NUMBER .)
    RBRACE          reduce using rule 2 (expression -> NUMBER .)


state 4

    (7) expression -> ID .
    (8) expression -> ID . EQUALS expression

    PLUS            reduce using rule 7 (expression -> ID .)
    MINUS           reduce using rule 7 (expression -> ID .)
    TIMES           reduce using rule 7 (expression -> ID .)
    DIVIDE          reduce using rule 7 (expression -> ID .)
    $end            reduce using rule 7 (expression -> ID .)
    LBRACE          reduce using rule 7 (expression -> ID .)
    RBRACE          reduce using rule 7 (expression -> ID .)
    EQUALS          shift and go to state 10


state 5

    (9) expression -> IF . expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (2) expression -> . NUMBER
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . ID
    (8) expression -> . ID EQUALS expression
    (9) expression -> . IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    NUMBER          shift and go to state 3
    ID              shift and go to state 4
    IF              shift and go to state 5

    expression                     shift and go to state 11

state 6

    (3) expression -> expression PLUS . expression
    (2) expression -> . NUMBER
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . ID
    (8) expression -> . ID EQUALS expression
    (9) expression -> . IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    NUMBER          shift and go to state 3
    ID              shift and go to state 4
    IF              shift and go to state 5

    expression                     shift and go to state 12

state 7

    (4) expression -> expression MINUS . expression
    (2) expression -> . NUMBER
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . ID
    (8) expression -> . ID EQUALS expression
    (9) expression -> . IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    NUMBER          shift and go to state 3
    ID              shift and go to state 4
    IF              shift and go to state 5

    expression                     shift and go to state 13

state 8

    (5) expression -> expression TIMES . expression
    (2) expression -> . NUMBER
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . ID
    (8) expression -> . ID EQUALS expression
    (9) expression -> . IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    NUMBER          shift and go to state 3
    ID              shift and go to state 4
    IF              shift and go to state 5

    expression                     shift and go to state 14

state 9

    (6) expression -> expression DIVIDE . expression
    (2) expression -> . NUMBER
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . ID
    (8) expression -> . ID EQUALS expression
    (9) expression -> . IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    NUMBER          shift and go to state 3
    ID              shift and go to state 4
    IF              shift and go to state 5

    expression                     shift and go to state 15

state 10

    (8) expression -> ID EQUALS . expression
    (2) expression -> . NUMBER
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . ID
    (8) expression -> . ID EQUALS expression
    (9) expression -> . IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    NUMBER          shift and go to state 3
    ID              shift and go to state 4
    IF              shift and go to state 5

    expression                     shift and go to state 16

state 11

    (9) expression -> IF expression . LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    LBRACE          shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    TIMES           shift and go to state 8
    DIVIDE          shift and go to state 9


state 12

    (3) expression -> expression PLUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 3 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 3 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 3 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    TIMES           shift and go to state 8
    DIVIDE          shift and go to state 9

  ! PLUS            [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression PLUS expression .) ]


state 13

    (4) expression -> expression MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 4 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 4 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 4 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    TIMES           shift and go to state 8
    DIVIDE          shift and go to state 9

  ! PLUS            [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression MINUS expression .) ]


state 14

    (5) expression -> expression TIMES expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 5 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 5 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 5 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    TIMES           shift and go to state 8
    DIVIDE          shift and go to state 9

  ! PLUS            [ reduce using rule 5 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 5 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression TIMES expression .) ]


state 15

    (6) expression -> expression DIVIDE expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 6 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 6 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 6 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    TIMES           shift and go to state 8
    DIVIDE          shift and go to state 9

  ! PLUS            [ reduce using rule 6 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 6 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression DIVIDE expression .) ]


state 16

    (8) expression -> ID EQUALS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 8 (expression -> ID EQUALS expression .)
    LBRACE          reduce using rule 8 (expression -> ID EQUALS expression .)
    RBRACE          reduce using rule 8 (expression -> ID EQUALS expression .)
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    TIMES           shift and go to state 8
    DIVIDE          shift and go to state 9

  ! PLUS            [ reduce using rule 8 (expression -> ID EQUALS expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> ID EQUALS expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> ID EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> ID EQUALS expression .) ]


state 17

    (9) expression -> IF expression LBRACE . expression RBRACE ELSE LBRACE expression RBRACE
    (2) expression -> . NUMBER
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . ID
    (8) expression -> . ID EQUALS expression
    (9) expression -> . IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    NUMBER          shift and go to state 3
    ID              shift and go to state 4
    IF              shift and go to state 5

    expression                     shift and go to state 18

state 18

    (9) expression -> IF expression LBRACE expression . RBRACE ELSE LBRACE expression RBRACE
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RBRACE          shift and go to state 19
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    TIMES           shift and go to state 8
    DIVIDE          shift and go to state 9


state 19

    (9) expression -> IF expression LBRACE expression RBRACE . ELSE LBRACE expression RBRACE

    ELSE            shift and go to state 20


state 20

    (9) expression -> IF expression LBRACE expression RBRACE ELSE . LBRACE expression RBRACE

    LBRACE          shift and go to state 21


state 21

    (9) expression -> IF expression LBRACE expression RBRACE ELSE LBRACE . expression RBRACE
    (2) expression -> . NUMBER
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . ID
    (8) expression -> . ID EQUALS expression
    (9) expression -> . IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    NUMBER          shift and go to state 3
    ID              shift and go to state 4
    IF              shift and go to state 5

    expression                     shift and go to state 22

state 22

    (9) expression -> IF expression LBRACE expression RBRACE ELSE LBRACE expression . RBRACE
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RBRACE          shift and go to state 23
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    TIMES           shift and go to state 8
    DIVIDE          shift and go to state 9


state 23

    (9) expression -> IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE .

    PLUS            reduce using rule 9 (expression -> IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)
    MINUS           reduce using rule 9 (expression -> IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)
    TIMES           reduce using rule 9 (expression -> IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)
    DIVIDE          reduce using rule 9 (expression -> IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)
    $end            reduce using rule 9 (expression -> IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)
    LBRACE          reduce using rule 9 (expression -> IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)
    RBRACE          reduce using rule 9 (expression -> IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 12 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 12 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 12 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 12 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 13 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 13 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 13 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 14 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 14 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 14 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 15 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 16 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 16 resolved as shift
