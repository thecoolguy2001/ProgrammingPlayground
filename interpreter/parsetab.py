
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA DIVIDE ELSE EQUALS FUN ID IF LBRACE LPAREN MINUS NUMBER PLUS RBRACE RPAREN TIMESprogram : expressionexpression : NUMBERexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : IDexpression : ID EQUALS expressionexpression : IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE'
    
_lr_action_items = {'NUMBER':([0,5,6,7,8,9,10,17,21,],[3,3,3,3,3,3,3,3,3,]),'ID':([0,5,6,7,8,9,10,17,21,],[4,4,4,4,4,4,4,4,4,]),'IF':([0,5,6,7,8,9,10,17,21,],[5,5,5,5,5,5,5,5,5,]),'$end':([1,2,3,4,12,13,14,15,16,23,],[0,-1,-2,-7,-3,-4,-5,-6,-8,-9,]),'PLUS':([2,3,4,11,12,13,14,15,16,18,22,23,],[6,-2,-7,6,6,6,6,6,6,6,6,-9,]),'MINUS':([2,3,4,11,12,13,14,15,16,18,22,23,],[7,-2,-7,7,7,7,7,7,7,7,7,-9,]),'TIMES':([2,3,4,11,12,13,14,15,16,18,22,23,],[8,-2,-7,8,8,8,8,8,8,8,8,-9,]),'DIVIDE':([2,3,4,11,12,13,14,15,16,18,22,23,],[9,-2,-7,9,9,9,9,9,9,9,9,-9,]),'LBRACE':([3,4,11,12,13,14,15,16,20,23,],[-2,-7,17,-3,-4,-5,-6,-8,21,-9,]),'RBRACE':([3,4,12,13,14,15,16,18,22,23,],[-2,-7,-3,-4,-5,-6,-8,19,23,-9,]),'EQUALS':([4,],[10,]),'ELSE':([19,],[20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expression':([0,5,6,7,8,9,10,17,21,],[2,11,12,13,14,15,16,18,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expression','program',1,'p_program','parser.py',30),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',34),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',38),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',39),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',40),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',41),
  ('expression -> ID','expression',1,'p_expression_var','parser.py',45),
  ('expression -> ID EQUALS expression','expression',3,'p_expression_assign','parser.py',49),
  ('expression -> IF expression LBRACE expression RBRACE ELSE LBRACE expression RBRACE','expression',9,'p_expression_if','parser.py',53),
]
